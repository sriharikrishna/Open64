 LOC 0 0 source files:	1	"/m_home/m_utkej/Argonne/Dev/Current/OpenAD/Open64/osprey1.0/tests/sliceVsSingle.f90"
 LOC 1 1 subroutine foo(x)
FUNC_ENTRY <1,20,foo_>
 IDNAME 0 <2,1,X>
BODY
 BLOCK
 END_BLOCK
 BLOCK
 END_BLOCK
 BLOCK
 PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
 LOC 1 2   integer :: x
 LOC 1 3   x=x+1
   I4I4LDID 0 <2,1,X> T<4,.predef_I4,4>
   I4INTCONST 1 (0x1)
  I4ADD
 I4STID 0 <2,1,X> T<4,.predef_I4,4>
 LOC 1 4 end subroutine
 RETURN
 END_BLOCK
 LOC 1 5 
 LOC 1 6 subroutine bar(x)
FUNC_ENTRY <1,21,bar_>
 IDNAME 0 <2,1,X>
BODY
 BLOCK
 END_BLOCK
 BLOCK
 END_BLOCK
 BLOCK
 PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
 LOC 1 7   integer :: x(1)
 LOC 1 8   x(1)=x(1)+1
     U8U8LDID 0 <2,1,X> T<32,anon_ptr.,8>
     I4INTCONST 1 (0x1)
     I4INTCONST 1 (0x1)
    U8ARRAY 1 4
   I4I4ILOAD 0 T<4,.predef_I4,4> T<29,anon_ptr.,8>
   I4INTCONST 1 (0x1)
  I4ADD
   U8U8LDID 0 <2,1,X> T<32,anon_ptr.,8>
   I4INTCONST 1 (0x1)
   I4INTCONST 1 (0x1)
  U8ARRAY 1 4
 I4ISTORE 0 T<29,anon_ptr.,8>
 LOC 1 9 end subroutine 
 RETURN
 END_BLOCK
 LOC 1 10 
 LOC 1 11 program arrays3
FUNC_ENTRY <1,22,arrays3_>
BODY
 BLOCK
 END_BLOCK
 BLOCK
 END_BLOCK
 BLOCK
 PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
 LOC 1 12   integer, dimension(2) :: x,y
 LOC 1 13   x(1)=1
  I4INTCONST 1 (0x1)
   U8LDA 0 <2,3,X> T<35,anon_ptr.,8>
   I4INTCONST 2 (0x2)
   I4INTCONST 1 (0x1)
  U8ARRAY 1 4
 I4ISTORE 0 T<29,anon_ptr.,8>
 LOC 1 14   y(2)=2
  I4INTCONST 2 (0x2)
   U8LDA 0 <2,4,Y> T<35,anon_ptr.,8>
   I4INTCONST 2 (0x2)
   I4INTCONST 2 (0x2)
  U8ARRAY 1 4
 I4ISTORE 0 T<29,anon_ptr.,8>
 LOC 1 15 ! see if this is unparsed as 
 LOC 1 16 ! a slice rather than a scalar
 LOC 1 17   call foo(x(1))
    U8LDA 0 <2,3,X> T<35,anon_ptr.,8>
    I4INTCONST 2 (0x2)
    I4INTCONST 1 (0x1)
   U8ARRAY 1 4
  U8PARM 257 T<35,anon_ptr.,8> #  by_reference PASS_ADDRESS 
 VCALL 2174 <1,20,foo_> # flags 0x87e
 LOC 1 18   call bar(y(2:2))
    U8LDA 0 <2,4,Y> T<35,anon_ptr.,8>
    I4INTCONST 2 (0x2)
     I4INTCONST 2 (0x2)
     I4INTCONST 2 (0x2)
     I4INTCONST 1 (0x1)
    I8SRCTRIPLET
   U8ARRSECTION 1 4
  U8PARM 262145 T<35,anon_ptr.,8> #  by_reference PASS_SECTION_ADDRESS 
 VCALL 2174 <1,21,bar_> # flags 0x87e
 LOC 1 19   if (x(1).eq.2 .and. y(2).eq.3) then 
 IF
      U8LDA 0 <2,3,X> T<35,anon_ptr.,8>
      I4INTCONST 2 (0x2)
      I4INTCONST 1 (0x1)
     U8ARRAY 1 4
    I4I4ILOAD 0 T<4,.predef_I4,4> T<29,anon_ptr.,8>
    I4INTCONST 2 (0x2)
   I4I4EQ
      U8LDA 0 <2,4,Y> T<35,anon_ptr.,8>
      I4INTCONST 2 (0x2)
      I4INTCONST 2 (0x2)
     U8ARRAY 1 4
    I4I4ILOAD 0 T<4,.predef_I4,4> T<29,anon_ptr.,8>
    I4INTCONST 3 (0x3)
   I4I4EQ
  I4LAND
 THEN
  BLOCK
 LOC 1 20 	print *, 'OK'
  COMMENT <2,6,print *, 'OK'> # 
  PRAGMA 0 177 <null-st> 0 (0x0) # START_STMT_CLUMP
   IO_ITEM <1,NONE>
   IO_ITEM <10,NONE>
    I4INTCONST 3 (0x3)
   IO_ITEM <73,FIRST_LAST_FLAG>
    I4INTCONST 0 (0x0)
   IO_ITEM <70,END_EOR_EOF_FLAG>
    I4INTCONST 0 (0x0)
   IO_ITEM <76,ENCODE_DECODE_FLAG>
    U8LDA 0 <1,25,"OK"> T<39,anon_ptr.,8>
    I8INTCONST 140763258159104 (0x800600000000)
    U4INTCONST 2 (0x2)
   IO_ITEM <96,CHAR> T<38,.ch_str.,1>
  IO <22,FORMATTED_WRITE,cray> 2
  PRAGMA 0 178 <null-st> 0 (0x0) # END_STMT_CLUMP
  END_BLOCK
 ELSE
 LOC 1 19
  BLOCK
 LOC 1 21   else
 LOC 1 22 	print *, 'failed'
  COMMENT <2,7,print *, 'failed'> # 
  PRAGMA 0 177 <null-st> 0 (0x0) # START_STMT_CLUMP
   IO_ITEM <1,NONE>
   IO_ITEM <10,NONE>
    I4INTCONST 3 (0x3)
   IO_ITEM <73,FIRST_LAST_FLAG>
    I4INTCONST 0 (0x0)
   IO_ITEM <70,END_EOR_EOF_FLAG>
    I4INTCONST 0 (0x0)
   IO_ITEM <76,ENCODE_DECODE_FLAG>
    U8LDA 0 <1,27,"failed"> T<42,anon_ptr.,8>
    I8INTCONST 140763258159104 (0x800600000000)
    U4INTCONST 6 (0x6)
   IO_ITEM <96,CHAR> T<41,.ch_str.,1>
  IO <22,FORMATTED_WRITE,cray> 2
  PRAGMA 0 178 <null-st> 0 (0x0) # END_STMT_CLUMP
  END_BLOCK
 END_IF
 LOC 1 23   endif 
 LOC 1 24 end program
 VCALL 2174 <1,23,_END> # flags 0x87e
 RETURN
 RETURN
 END_BLOCK
