 LOC 0 0 source files:	1	"/m_home/m_utkej/Argonne/Dev/Current/OpenAD/Open64/osprey1.0/tests/fortran90/single_file_tests/carray.f"
 LOC 1 1         module carray
FUNC_ENTRY <1,21,carray_>
BODY
 BLOCK
 END_BLOCK
 BLOCK
 END_BLOCK
 BLOCK
 INTERFACE <2,7,COUNTARRAY>
 BODY
  FUNC_ENTRY <1,25,CN>
   IDNAME 0 <2,1,F>
   IDNAME 0 <2,2,CS>
  FUNC_ENTRY <1,23,C2>
   IDNAME 0 <2,3,F>
   IDNAME 0 <2,4,CS>
  FUNC_ENTRY <1,20,C1>
   IDNAME 0 <2,5,F>
   IDNAME 0 <2,6,CS>
 PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
 END_BLOCK
 LOC 1 2           interface countarray
 LOC 1 3              module procedure c1, c2, cn
 LOC 1 4           end interface
 LOC 1 5           contains
 LOC 1 6           subroutine c1(f,cs)
FUNC_ENTRY <1,20,C1>
 IDNAME 0 <3,1,F>
 IDNAME 0 <3,2,CS>
BODY
 BLOCK
 END_BLOCK
 BLOCK
 END_BLOCK
 BLOCK
 PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
 LOC 1 7             real, dimension(:), intent(in) :: f
 LOC 1 8             integer, intent(out) :: cs
 LOC 1 9 
 LOC 1 10             cs=size(f)
 BODY
     U8U8LDID 0 <3,1,F> T<30,anon_ptr.,8>
    F4F4ILOAD 0 T<10,.predef_F4,4> T<34,anon_ptr.,8>
   U8PARM 1 T<10,.predef_F4,4> #  by_reference 
  I4CALL 2174 <1,22,SIZE> # flags 0x87e
 I4STID 0 <3,2,CS> T<4,.predef_I4,4>
 LOC 1 11           end subroutine c1
 RETURN
 END_BLOCK
 LOC 1 12 
 LOC 1 13           subroutine c2(f,cs)
FUNC_ENTRY <1,23,C2>
 IDNAME 0 <3,1,F>
 IDNAME 0 <3,2,CS>
BODY
 BLOCK
 END_BLOCK
 BLOCK
 END_BLOCK
 BLOCK
 PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
 LOC 1 14             real, dimension(:,:), intent(in) :: f
 LOC 1 15             integer, intent(out) :: cs
 LOC 1 16 
 LOC 1 17             cs=size(f)
 BODY
     U8U8LDID 0 <3,1,F> T<37,anon_ptr.,8>
    F4F4ILOAD 0 T<10,.predef_F4,4> T<34,anon_ptr.,8>
   U8PARM 1 T<10,.predef_F4,4> #  by_reference 
  I4CALL 2174 <1,24,SIZE> # flags 0x87e
 I4STID 0 <3,2,CS> T<4,.predef_I4,4>
 LOC 1 18           end subroutine c2
 RETURN
 END_BLOCK
 LOC 1 19 
 LOC 1 20           subroutine cn(f,cs)
FUNC_ENTRY <1,25,CN>
 IDNAME 0 <3,1,F>
 IDNAME 0 <3,2,CS>
BODY
 BLOCK
 END_BLOCK
 BLOCK
 END_BLOCK
 BLOCK
 PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
 LOC 1 21             real, intent(in) :: f
 LOC 1 22             integer, intent(out) :: cs
 LOC 1 23 
 LOC 1 24             cs=0
  I4INTCONST 0 (0x0)
 I4STID 0 <3,2,CS> T<4,.predef_I4,4>
 LOC 1 25           end subroutine cn
 RETURN
 END_BLOCK
 LOC 1 26         end module carray
 LOC 1 27 
 LOC 1 28         program mc
FUNC_ENTRY <1,26,mc_>
BODY
 BLOCK
 END_BLOCK
 BLOCK
 END_BLOCK
 BLOCK
 PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
 LOC 1 29          use carray
 VUSE <1,21,carray_>
 USE!!!!!
 LOC 1 30          real  :: g0
 LOC 1 31          real, dimension (3) :: g1
 LOC 1 32          real, dimension (2,2) :: g2
 LOC 1 33          integer :: sn, s1, s2
 LOC 1 34          g0=0.
  F4CONST <1,28,____0.000000>
 F4STID 0 <2,1,G0> T<10,.predef_F4,4>
 LOC 1 35          g1=(/1., 2., 3./)
     U8LDA 0 <2,8,t__1> T<48,anon_ptr.,8>
     I4INTCONST 3 (0x3)
      I4INTCONST 1 (0x1)
      I4INTCONST 3 (0x3)
      I4INTCONST 1 (0x1)
     I8SRCTRIPLET
    U8ARRSECTION 1 4
   F4F4ILOAD 0 T<10,.predef_F4,4> T<34,anon_ptr.,8>
   I4INTCONST 1 (0x1)
  F4ARRAYEXP 2
    U8LDA 0 <2,2,G1> T<48,anon_ptr.,8>
    I4INTCONST 3 (0x3)
     I4INTCONST 1 (0x1)
     I4INTCONST 3 (0x3)
     I4INTCONST 1 (0x1)
    I8SRCTRIPLET
   U8ARRSECTION 1 4
   I4INTCONST 1 (0x1)
  U8ARRAYEXP 2
 F4ISTORE 0 T<34,anon_ptr.,8>
 LOC 1 36          g2=reshape((/1., 2., 3., 4./),(/2,2/))
 BODY
     U8LDA 0 <2,9,t__2> T<49,anon_ptr.,8>
    F4F4ILOAD 0 T<10,.predef_F4,4> T<34,anon_ptr.,8>
   U8PARM 1 T<10,.predef_F4,4> #  by_reference 
     U8LDA 0 <2,10,t__3> T<51,anon_ptr.,8>
    I4I4ILOAD 0 T<4,.predef_I4,4> T<31,anon_ptr.,8>
   U8PARM 1 T<4,.predef_I4,4> #  by_reference 
### attention: null WN pointer, place holder
### attention: null WN pointer, place holder
  F4CALL 2174 <1,29,RESHAPE> # flags 0x87e
    U8LDA 0 <2,3,G2> T<49,anon_ptr.,8>
    I4INTCONST 2 (0x2)
    I4INTCONST 2 (0x2)
     I4INTCONST 1 (0x1)
     I4INTCONST 2 (0x2)
     I4INTCONST 1 (0x1)
    I8SRCTRIPLET
     I4INTCONST 1 (0x1)
     I4INTCONST 2 (0x2)
     I4INTCONST 1 (0x1)
    I8SRCTRIPLET
   U8ARRSECTION 2 4
   I4INTCONST 1 (0x1)
   I4INTCONST 1 (0x1)
  U8ARRAYEXP 3
 F4ISTORE 0 T<34,anon_ptr.,8>
 LOC 1 37          call countarray(g0, sn)
   F4F4LDID 0 <2,1,G0> T<10,.predef_F4,4>
  U8PARM 257 T<10,.predef_F4,4> #  by_reference PASS_ADDRESS 
   I4I4LDID 0 <2,6,SN> T<4,.predef_I4,4>
  U8PARM 257 T<4,.predef_I4,4> #  by_reference PASS_ADDRESS 
 VCALL 2174 <1,25,CN> # flags 0x87e
 LOC 1 38          call countarray(g1, s1)
    U8LDA 0 <2,2,G1> T<48,anon_ptr.,8>
   F4F4ILOAD 0 T<10,.predef_F4,4> T<34,anon_ptr.,8>
  U8PARM 32769 T<10,.predef_F4,4> #  by_reference MAKE_DV 
   I4I4LDID 0 <2,4,S1> T<4,.predef_I4,4>
  U8PARM 257 T<4,.predef_I4,4> #  by_reference PASS_ADDRESS 
 VCALL 2174 <1,20,C1> # flags 0x87e
 LOC 1 39          call countarray(g2, s2)
    U8LDA 0 <2,3,G2> T<49,anon_ptr.,8>
   F4F4ILOAD 0 T<10,.predef_F4,4> T<34,anon_ptr.,8>
  U8PARM 32769 T<10,.predef_F4,4> #  by_reference MAKE_DV 
   I4I4LDID 0 <2,5,S2> T<4,.predef_I4,4>
  U8PARM 257 T<4,.predef_I4,4> #  by_reference PASS_ADDRESS 
 VCALL 2174 <1,23,C2> # flags 0x87e
 LOC 1 40          if((sn.EQ.0).AND.(s1.EQ.3).AND.(s2.EQ.4)) then
 IF
    I4I4LDID 0 <2,5,S2> T<4,.predef_I4,4>
    I4INTCONST 4 (0x4)
   I4I4EQ
     I4I4LDID 0 <2,4,S1> T<4,.predef_I4,4>
     I4INTCONST 3 (0x3)
    I4I4EQ
     I4I4LDID 0 <2,6,SN> T<4,.predef_I4,4>
     I4INTCONST 0 (0x0)
    I4I4EQ
   I4LAND
  I4LAND
 THEN
  BLOCK
 LOC 1 41            print *, "OK"
  COMMENT <2,11,print *, "OK"> # 
  PRAGMA 0 177 <null-st> 0 (0x0) # START_STMT_CLUMP
   IO_ITEM <1,NONE>
   IO_ITEM <10,NONE>
    I4INTCONST 3 (0x3)
   IO_ITEM <73,FIRST_LAST_FLAG>
    I4INTCONST 0 (0x0)
   IO_ITEM <70,END_EOR_EOF_FLAG>
    I4INTCONST 0 (0x0)
   IO_ITEM <76,ENCODE_DECODE_FLAG>
    U8LDA 0 <1,31,"OK"> T<55,anon_ptr.,8>
    I8INTCONST 140763258159104 (0x800600000000)
    U4INTCONST 2 (0x2)
   IO_ITEM <96,CHAR> T<54,.ch_str.,1>
  IO <22,FORMATTED_WRITE,cray> 2
  PRAGMA 0 178 <null-st> 0 (0x0) # END_STMT_CLUMP
  END_BLOCK
 ELSE
 LOC 1 40
  BLOCK
 LOC 1 42          else
 LOC 1 43            print *, "failed"
  COMMENT <2,12,print *, "failed"> # 
  PRAGMA 0 177 <null-st> 0 (0x0) # START_STMT_CLUMP
   IO_ITEM <1,NONE>
   IO_ITEM <10,NONE>
    I4INTCONST 3 (0x3)
   IO_ITEM <73,FIRST_LAST_FLAG>
    I4INTCONST 0 (0x0)
   IO_ITEM <70,END_EOR_EOF_FLAG>
    I4INTCONST 0 (0x0)
   IO_ITEM <76,ENCODE_DECODE_FLAG>
    U8LDA 0 <1,33,"failed"> T<58,anon_ptr.,8>
    I8INTCONST 140763258159104 (0x800600000000)
    U4INTCONST 6 (0x6)
   IO_ITEM <96,CHAR> T<57,.ch_str.,1>
  IO <22,FORMATTED_WRITE,cray> 2
  PRAGMA 0 178 <null-st> 0 (0x0) # END_STMT_CLUMP
  END_BLOCK
 END_IF
 LOC 1 44          end if
 LOC 1 45         end program mc  
 VCALL 2174 <1,27,_END> # flags 0x87e
 RETURN
 RETURN
 END_BLOCK
