
#
#  Copyright (C) 2002 Rice University.  All Rights Reserved.
#
#  This program is free software; you can redistribute it and/or modify it
#  under the terms of version 2 of the GNU General Public License as
#  published by the Free Software Foundation.
#
#  This program is distributed in the hope that it would be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
#
#  Further, this software is distributed without any warranty that it is
#  free of the rightful claim of any third person regarding infringement 
#  or the like.  Any license provided herein, whether implied or 
#  otherwise, applies only to this software file.  Patent licenses, if 
#  any, provided herein do not apply to combinations of this program with 
#  other software, or any other product whatsoever.  
#
#  You should have received a copy of the GNU General Public License along
#  with this program; if not, write the Free Software Foundation, Inc., 59
#  Temple Place - Suite 330, Boston MA 02111-1307, USA.
#

#
#  Makefile.base for libf90caf.a 
#

include	$(COMMONDEFS)


#----------------------------------------------------------------------
# Compiler Options
#----------------------------------------------------------------------
CVERSION =
LCOPTS += $(STD_COMPILE_OPTS)

ifeq ($(BUILD_COMPILER), VENDOR)
WOFF += -fullwarn
else
WOFF +=
endif

HOSTDEFS += -DIR_TOOLS
HOSTDEFS += -D_NEW_SYMTAB
HOSTDEFS += -DCOMPILE_UPC

ifeq ($(BUILD_COMPILER), GNU)
HOSTDEFS += -D__GNU_BUG_WORKAROUND
endif

ifeq ($(BUILD_TARGET), IA64)
TARGDEFS += -D__MIPS_AND_IA64_ELF_H
endif
ifeq ($(BUILD_TARGET), IA32)
TARGDEFS += -D__MIPS_AND_IA64_ELF_H
endif

ifeq ($(BUILD_VARIANT), DEBUG)
LCDEFS += -DInsist_On -DDEBUG_IR
endif

LCDEFS += $(HOSTDEFS) $(TARGDEFS)
C++DEFS += $(HOSTDEFS) $(TARGDEFS)

GLDOPTS = $(STD_LOAD_OPTS)

LIBCOMUTIL = $(BUILD_AREA)/libcomutil/libcomutil.a

ifeq ($(BUILD_COMPILER), VENDOR)
LLDLIBS	= $(LIBCOMUTIL) -lgen -lm
endif

ifeq ($(BUILD_COMPILER),GNU)
ifeq ($(BUILD_OS), IRIX)
LLDLIBS	= $(LIBCOMUTIL) -lgen -lm  # -lgen needed for basename() on IRIX
else
LLDLIBS = $(LIBCOMUTIL) -lm
endif
endif

LCXXOPTS = $(LCOPTS)
LCXXDEFS = $(LCDEFS)

TARGETS = libf90caf.a 

# Add OpenAnalysis header directory.
#OPENROOT = /home/jle/trice/OpenAnalysis
#XINC+= -I$(OPENROOT)/src


COMMON_UTIL_DIR= $(BUILD_TOT)/common/util
COMMON_COM_DIR= $(BUILD_TOT)/common/com
COMMON_COM_TARG_DIR= $(BUILD_TOT)/common/com/ia64

LDIRT = libf90caf.a 


#----------------------------------------------------------------------
# define LCINCS 
#----------------------------------------------------------------------
LCINCS = -I$(BUILD_BASE) -I$(COMMON_COM_DIR) -I$(COMMON_COM_TARG_DIR) \
	-I$(COMMON_UTIL_DIR) -I$(BUILD_TOT)/include $(XINC) 

ifeq ($(BUILD_OS), LINUX)
LCINCS += -I$(BUILD_AREA)/include -I$(BUILD_AREA)/include/libelf
endif

ifneq ($(STL_EXT_PATH),)
LCINCS += -I$(STL_EXT_PATH)
endif

LCXXINCS := $(LCINCS)

#----------------------------------------------------------------------
# List of Source files
#----------------------------------------------------------------------
COMMON_COM_TARG_SRC =     \
	c_a_to_q.c        \
	config_host.c     \
	config_platform.c 

CFILES=  \
	$(COMMON_COM_SRC) \
	$(COMMON_COM_TARG_SRC)

COMMON_COM_CXX_SRC =	\
	config.cxx	\
	config_elf_targ.cxx \
	const.cxx	\
	cxx_memory.cxx \
	dwarf_DST.cxx	\
	dwarf_DST_dump.cxx	\
	dwarf_DST_mem.cxx	\
	glob.cxx	\
	ir_bcom.cxx	\
	ir_bread.cxx	\
	ir_bwrite.cxx	\
	ir_reader.cxx	\
	irbdata.cxx	\
	mtypes.cxx	\
	opcode.cxx	\
	opcode_core.cxx	\
	pu_info.cxx	\
	quadop.cxx      \
	strtab.cxx	\
	symtab.cxx	\
	symtab_verify.cxx	\
	wn.cxx		\
	wn_map.cxx	\
	wn_pragmas.cxx	\
	wn_simp.cxx	\
	wn_util.cxx	\
	wutil.cxx	\
	xstats.cxx	\
	upc_symtab_utils.cxx	\
	upc_wn_util.cxx



COMMON_COM_TARG_CXX_SRCS =	\
	config_targ.cxx	\
	targ_const.cxx	\
	targ_sim.cxx	

CXXFILES =		             \
	dummy-defines.cxx            \
	$(COMMON_COM_CXX_SRC)        \
	$(COMMON_COM_TARG_CXX_SRCS)


#----------------------------------------------------------------------
#  Platform specific options
#----------------------------------------------------------------------

ifeq ($(BUILD_OS), IRIX)
CFLAGS += -D_SGI_SGI
CXXFLAGS += -D_SGI_SGI 
 ifeq ($(BUILD_COMPILER), VENDOR)
 CFLAGS += -woff 1174,1178,1552,1183
 CXXFLAGS += -woff 1174,1178,1552,1183
 endif
endif

ifeq ($(BUILD_OS), LINUX)
endif

ifeq ($(BUILD_OS), SOLARIS)
CFLAGS = -D_SOLARIS_SOLARIS -D_SOLARIS -DIR_TOOLS -D_NEW_SYMTAB \
	-Dlonglong -D_LONGLONG -D_PDGCS -DUSE_STANDARD_TYPES -DCOMPILE_UPC $(LCINCS)
 ifeq ($(BUILD_COMPILER), VENDOR)
 ifeq ($(BUILD_SB), YES)
 CFLAGS += -xsb
 endif
 endif
 ifeq ($(BUILD_COMPILER), GNU)
 CFLAGS +=  -D__GNU_BUG_WORKAROUND
 endif
CXXFLAGS = $(CFLAGS) -w
endif
#----------------------------------------------------------------------


default: first depends $(TARGETS) last

#----------------------------------------------------------------------
#  The commands in this section are done BEFORE any other target is
#  built.
#----------------------------------------------------------------------
include $(BUILD_TOT)/Makeinclude

ifeq ($(BUILD_OS), LINUX)
first:
	cd $(BUILD_AREA)/include && $(MAKE)
else
first:
endif

#----------------------------------------------------------------------
#  The commands in this section are done AFTER every other target is
#  built.
#----------------------------------------------------------------------
DIRTS =

#----------------------------------------------------------------------
#  Installation
#----------------------------------------------------------------------
install: default 
	$(STD_INSTALL) -F /usr/sbin libf90caf.a

#----------------------------------------------------------------------
#  Include the usual commonrules
#----------------------------------------------------------------------
include $(COMMONRULES)


#----------------------------------------------------------------------
#  Paths where source files are located in
#----------------------------------------------------------------------
VPATH = $(BUILD_BASE) $(COMMON_UTIL_DIR) $(COMMON_COM_DIR) $(COMMON_COM_TARG_DIR)


libf90caf.a: $(OBJECTS) 
	ar -r $@ $(OBJECTS)

