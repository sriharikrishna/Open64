#
#
#  Copyright (C) 2000, 2001 Silicon Graphics, Inc.  All Rights Reserved.
#
#  This program is free software; you can redistribute it and/or modify it
#  under the terms of version 2.1 of the GNU Lesser General Public License 
#  as published by the Free Software Foundation.
#
#  This program is distributed in the hope that it would be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
#
#  Further, this software is distributed without any warranty that it is
#  free of the rightful claim of any third person regarding infringement 
#  or the like.  Any license provided herein, whether implied or 
#  otherwise, applies only to this software file.  Patent licenses, if
#  any, provided herein do not apply to combinations of this program with 
#  other software, or any other product whatsoever.  
#
#  You should have received a copy of the GNU Lesser General Public 
#  License along with this program; if not, write the Free Software 
#  Foundation, Inc., 59 Temple Place - Suite 330, Boston MA 02111-1307, 
#  USA.
#
#  Contact information:  Silicon Graphics, Inc., 1600 Amphitheatre Pky,
#  Mountain View, CA 94043, or:
#
#  http://www.sgi.com
#
#  For further information regarding this notice, see:
#
#  http://oss.sgi.com/projects/GenInfo/NoticeExplan
#
#

#
#  Makefile.base for libcmplrs
#

include	$(COMMONDEFS)

ifeq ($(BUILD_COMPILER), EDG)
CVERSION = -xansi
else
CVERSION =
endif

LCOPTS   = $(STD_COMPILE_OPTS)
ifeq ($(BUILD_COMPILER), EDG)
LCDEFS   = -D_SYSV -DSYSV -fullwarn
else
LCDEFS   = -D_SYSV -DSYSV
endif
WOFF     =
LCINCS  += -I$(BUILD_TOT)/include/cmplrs

ifeq ($(BUILD_OS), LINUX)
LCINCS += -I$(BUILD_AREA)/include
endif

LIBRARY = libcmplrs.a
LIBRARYG0 = libcmplrs_G0.a

TARGETS = $(LIBRARY)

CFILES = \
	array_alloc.c \
	make_depend.c

ifeq ($(BUILD_OS), IRIX)
#CFILES += \
#	elfmap.c \
#	events.c
CFILES += events.c 
endif

default: first depends $(TARGETS) last

ifeq ($(BUILD_OS), LINUX)
first:
	cd $(BUILD_AREA)/include && $(MAKE)
else
first:
endif

include $(BUILD_TOT)/Makeinclude

last: make_libdeps

exports: default
	$(INSTALL) $(STD_INSTALL_READ_MASK) -F $(STD_LIBRARY_LOC) $(TARGETS)

install: default
	$(STD_INSTALL) $(STD_INSTALL_READ_MASK) -F $(STD_LIBRARY_LOC) $(TARGETS)

include $(COMMONRULES)

VPATH =  $(BUILD_BASE)

.PRECIOUS: $(LIBRARY)
$(LIBRARY): $(LIBRARY)($(OBJECTS))



# FIXME: copied from Ji's ../be/Makefile.gbase, not sure if needed.
ifeq ($(BUILD_OS), IRIX)
CFLAGS += -D_SGI_SGI
CXXFLAGS += -D_SGI_SGI 
 ifeq ($(BUILD_COMPILER), VENDOR)
 CFLAGS += -woff 1174,1209,3201
 CXXFLAGS += -woff 1174,1209,3201
 else
 CFLAGS += -D_GCC_NO_PRAGMAWEAK -D__GNU_BUG_WORKAROUND
 CXXFLAGS += -D_GCC_NO_PRAGMAWEAK -D__GNU_BUG_WORKAROUND
 endif
endif

ifeq ($(BUILD_OS), LINUX)
CFLAGS  += -D_LINUX_LINUX
CXXFLAGS += -D_LINUX_LINUX 
endif

ifeq ($(BUILD_OS), SOLARIS) 
CFLAGS = -D_SOLARIS_SOLARIS -D_SOLARIS -D_LEGO_CLONER -DBACK_END -DMONGOOSE_BE \        -D_LONGLONG -Dlonglong -D_SVR4_SOURCE -D_NEW_SYMTAB -DTARG_SOLARIS \
        $(LCINCS) $(OPTIMIZER)
 ifeq ($(BUILD_COMPILER), VENDOR)
 CFLAGS += -KPIC
 ifeq ($(BUILD_SB), YES)
 CFLAGS += -xsb
 endif
 endif
 ifeq ($(BUILD_COMPILER), GNU)
 CFLAGS += -D__GNU_BUG_WORKAROUND -fPIC 
 endif
CXXFLAGS = $(CFLAGS) -w
endif

  
