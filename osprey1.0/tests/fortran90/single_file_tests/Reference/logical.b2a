 LOC 0 0 source files:	1	"/m_home/m_utkej/Argonne/Dev/Current/OpenAD/Open64/osprey1.0/tests/fortran90/single_file_tests/logical.f90"
 LOC 1 1 MODULE mymod
FUNC_ENTRY <1,21,mymod_>
BODY
 BLOCK
 END_BLOCK
 BLOCK
 END_BLOCK
 BLOCK
 PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
 END_BLOCK
 LOC 1 2   INTEGER myint
 LOC 1 3 CONTAINS
 LOC 1 4   LOGICAL FUNCTION funand (arg1, arg2)
FUNC_ENTRY <1,20,FUNAND>
 IDNAME 0 <3,2,ARG1>
 IDNAME 0 <3,3,ARG2>
BODY
 BLOCK
 END_BLOCK
 BLOCK
 END_BLOCK
 BLOCK
 PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
 LOC 1 5 	LOGICAL, INTENT(IN) :: arg1, arg2
 LOC 1 6 	funand=arg1 .AND. arg2
   I4I4LDID 0 <3,2,ARG1> T<27,.log.4,4>
   I4I4LDID 0 <3,3,ARG2> T<27,.log.4,4>
  I4LAND
 I4STID 0 <3,1,FUNAND> T<27,.log.4,4>
 LOC 1 7   END FUNCTION
  I4I4LDID 0 <3,1,FUNAND> T<27,.log.4,4>
 I4RETURN_VAL
 END_BLOCK
 LOC 1 8 END MODULE
 LOC 1 9 
 LOC 1 10 PROGRAM MAIN
FUNC_ENTRY <1,23,main_>
BODY
 BLOCK
 END_BLOCK
 BLOCK
 END_BLOCK
 BLOCK
 PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
 LOC 1 11 USE mymod
 VUSE <1,21,mymod_>
 USE!!!!!
 LOC 1 12 LOGICAL x1
 LOC 1 13 LOGICAL x2
 LOC 1 14 x1= .TRUE.
  I4INTCONST 1 (0x1)
 I4STID 0 <2,1,X1> T<27,.log.4,4>
 LOC 1 15 x2= funand(x1, x1)
 BODY
    I4I4LDID 0 <2,1,X1> T<27,.log.4,4>
   U8PARM 257 T<27,.log.4,4> #  by_reference PASS_ADDRESS 
    I4I4LDID 0 <2,1,X1> T<27,.log.4,4>
   U8PARM 257 T<27,.log.4,4> #  by_reference PASS_ADDRESS 
  I4CALL 2174 <1,20,FUNAND> # flags 0x87e
 I4STID 0 <2,2,X2> T<27,.log.4,4>
 LOC 1 16 if(x2) then
 IF
  I4I4LDID 0 <2,2,X2> T<27,.log.4,4>
 THEN
  BLOCK
 LOC 1 17   print *, "OK"
  COMMENT <2,4,print *, "OK"> # 
  PRAGMA 0 177 <null-st> 0 (0x0) # START_STMT_CLUMP
   IO_ITEM <1,NONE>
   IO_ITEM <10,NONE>
    I4INTCONST 3 (0x3)
   IO_ITEM <73,FIRST_LAST_FLAG>
    I4INTCONST 0 (0x0)
   IO_ITEM <70,END_EOR_EOF_FLAG>
    I4INTCONST 0 (0x0)
   IO_ITEM <76,ENCODE_DECODE_FLAG>
    U8LDA 0 <1,26,"OK"> T<34,anon_ptr.,8>
    I8INTCONST 140763258159104 (0x800600000000)
    U4INTCONST 2 (0x2)
   IO_ITEM <96,CHAR> T<33,.ch_str.,1>
  IO <22,FORMATTED_WRITE,cray> 2
  PRAGMA 0 178 <null-st> 0 (0x0) # END_STMT_CLUMP
  END_BLOCK
 ELSE
 LOC 1 16
  BLOCK
 LOC 1 18 else
 LOC 1 19   print *, "failed"
  COMMENT <2,5,print *, "failed"> # 
  PRAGMA 0 177 <null-st> 0 (0x0) # START_STMT_CLUMP
   IO_ITEM <1,NONE>
   IO_ITEM <10,NONE>
    I4INTCONST 3 (0x3)
   IO_ITEM <73,FIRST_LAST_FLAG>
    I4INTCONST 0 (0x0)
   IO_ITEM <70,END_EOR_EOF_FLAG>
    I4INTCONST 0 (0x0)
   IO_ITEM <76,ENCODE_DECODE_FLAG>
    U8LDA 0 <1,28,"failed"> T<37,anon_ptr.,8>
    I8INTCONST 140763258159104 (0x800600000000)
    U4INTCONST 6 (0x6)
   IO_ITEM <96,CHAR> T<36,.ch_str.,1>
  IO <22,FORMATTED_WRITE,cray> 2
  PRAGMA 0 178 <null-st> 0 (0x0) # END_STMT_CLUMP
  END_BLOCK
 END_IF
 LOC 1 20 end if
 LOC 1 21 END
 VCALL 2174 <1,24,_END> # flags 0x87e
 RETURN
 RETURN
 END_BLOCK
